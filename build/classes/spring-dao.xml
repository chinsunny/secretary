<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:c3p0.properties</value>
                <value>classpath:hibernate.properties</value>
            </list>
        </property>
    </bean>

    <bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${connection.driver_class}"/>
        <property name="jdbcUrl" value="${connection.url}"/>
        <property name="user" value="${connection.username}"/>
        <property name="password" value="${connection.password}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
        <property name="maxStatements" value="${c3p0.maxStatements}"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="c3p0DataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
    </bean>

    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.query.factory_class">${hibernate.query.factory_class}</prop>
                <prop key="hibernate.cglib.use_reflection_optimizer">${hibernate.cglib.use_reflection_optimizer}</prop>
                <prop key="hibernate.transaction.factory_class">${hibernate.transaction.factory_class}</prop>
            </props>
        </property>
    </bean>

    <bean id="finderIntroductionAdvisor" class="secretar.aop.FinderIntroductionAdvisor"/>

    <bean id="abstractDaoTarget" class="secretar.dao.GenericDaoFinderHibernateImpl" abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="abstractDao" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
                <value>finderIntroductionAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="competitionDao" parent="abstractDao">
        <property name="proxyInterfaces" value="secretar.dao.CompetitionDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.Competition"/>
            </bean>
        </property>
    </bean>

    <bean id="delegationDao" parent="abstractDao">
        <property name="proxyInterfaces" value="secretar.dao.DelegationDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.Delegation"/>
            </bean>
        </property>
    </bean>

    <bean id="groupDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.GroupDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.Group"/>
            </bean>
        </property>
    </bean>

    <bean id="distanceDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.DistanceDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.Distance"/>
            </bean>
        </property>
    </bean>

    <bean id="lapDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.LapDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.Lap"/>
            </bean>
        </property>
    </bean>

    <bean id="teamDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.TeamDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.Team"/>
            </bean>
        </property>
    </bean>

    <bean id="teamMemberDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.TeamMemberDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.TeamMember"/>
            </bean>
        </property>
    </bean>

    <bean id="competitionPartDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.CompetitionPartDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.CompetitionPart"/>
            </bean>
        </property>
    </bean>

    <bean id="distancePartDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.DistancePartDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.DistancePart"/>
            </bean>
        </property>
    </bean>

    <bean id="lapPartDao" parent="abstractDao">
       <property name="proxyInterfaces" value="secretar.dao.LapPartDao"/>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg value="secretar.objects.LapPart"/>
            </bean>
        </property>
    </bean>



</beans>
